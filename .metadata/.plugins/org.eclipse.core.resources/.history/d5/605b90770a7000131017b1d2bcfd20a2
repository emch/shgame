/*
 * _surface.c
 *
 *  Created on: 28 déc. 2013
 *      Author: Emmanuel
 */

#include <stdlib.h>

#include "shclient.h"
#include "shdata.h"

// Double buffered hardware rendered surface
SHSurface* NewSurface(int width, int height, SHSurface* parent, int pos_x, int pos_y, int visible, int r, int g, int b, SHLogger* myLogger) {
	SHSurface* res = malloc(sizeof(SHSurface));
	SDL_Surface* res_surf = SDL_SetVideoMode(width, height, 32, SDL_HWSURFACE | SDL_DOUBLEBUF);
	SDL_Rect* res_pos = malloc(sizeof(SDL_Rect));
	res_pos->x = pos_x; res_pos->y = pos_y;

	if(res_surf == NULL) {
		flogf(myLogger, "Failed to set video mode : %s\n", SDL_GetError());
		exit(EXIT_FAILURE);
	}

	// Filling fields
	res->sdl_surf 	= res_surf;
	res->parent 	= parent;
	res->sdl_pos 	= res_pos;

	flogf(myLogger, "Surface created successfully at adress %p", res);
	return res;
}

/**
 * \fn		DestroySurface
 * \brief	Removes all fields of an SHSurface from memory
 *
 * \param	surface		pointer to surface to destroy
 * \param	myLogger	pointer to logging "device"
 */
void DestroySurface(SHSurface* surface, SHLogger* myLogger) {
	SDL_FreeSurface(surface->sdl_surf);
	free(surface->sdl_pos);
	flogf(myLogger, "Surface at address %p destroyed successfully", surface);
}

/**
 * \fn		RenderSurface
 * \brief	Renders a surface when called in rendering loop
 *
 * \param	surface	pointer to surface to render
 */
void RenderSurface(SHSurface* surface) {
	// blit etc ...
	SDL_FillRect(surface->sdl_surf, NULL, SDL_MapRGB(surface->sdl_surf->format, 255, 255, 255));

	if((surface->parent != NULL) && (surface->visible != 0)) {
		SDL_BlitSurface(surface->sdl_surf, NULL, surface->parent, surface->sdl_pos);
	}
}

/**
 * \fn		SetVisible
 * \brief	Changes visible status
 *
 * \param	surface	pointer to surface to set visible or not
 * \param	visible	any integer value, 0 meaning false
 */
void SetVisible(SHSurface* surface, int visible) {
	surface->visible = visible;
}
