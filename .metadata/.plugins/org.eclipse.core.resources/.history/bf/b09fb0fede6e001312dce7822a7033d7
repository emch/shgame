/*
 * _logger.c
 *
 *  Created on: 26 déc. 2013
 *      Author: Emmanuel
 */

// faire une fonction du type flogf avec %s %d %i etc et les variables associées !
// voir fprintf ?
// ou sscanf ?

#include <stdlib.h>
#include <string.h>
#include <time.h>

#include "shdata.h"

/**
 * \fn		CreateLogger
 * \brief	Creates a logging file in executable directory
 *
 * \inputs	output_name	desired output file name
 * \returns	pointer to logging "device"
 */
SHLogger* CreateLogger(char* output_name) {
	SHLogger* mylogger = malloc(sizeof(SHLogger));
	FILE* myfile = fopen(output_name, "w");

	strcpy(mylogger->filename, output_name); // TODO check properties considering size
	mylogger->file = myfile;
	time(&mylogger->timestamp);
	mylogger->now = *localtime(&mylogger->timestamp);

	// Some basic information
	fprintf(mylogger->file, "%s\r\n", "SHServer Logging File");
	fprintf(mylogger->file, "Generated on %02d-%02d-%04d",
			mylogger->now.tm_mon+1, mylogger->now.tm_mday, mylogger->now.tm_year+1900);
	fprintf(mylogger->file, " at %02d:%02d:%02d.\r\n\r\n",
			mylogger->now.tm_hour, mylogger->now.tm_min, mylogger->now.tm_sec);
//	if(flags & SQ_LOGGER_VERSION) {
//		fprintf(logger->_file, "v%d.%d.%d\n", MAJOR, MINOR, BUILD);
//	}
//	if(flags & SQ_LOGGER_DAY) {
//		// Add day on top of log file
//		fprintf(logger->_file, "Generated on %02d-%02d-%04d", now.tm_mon+1, now.tm_mday, now.tm_year+1900);
//	}
//	if(flags & SQ_LOGGER_TIME) {
//		// Add time after day
//		fprintf(logger->_file, " at %02d:%02d:%02d", now.tm_hour, now.tm_min, now.tm_sec);
//	}
//	fprintf(logger->_file, ".\n\n");
//	// End of Basic information

	return mylogger;
}

/**
 * \fn		DestroyLogger
 * \brief	Eliminates logger from memory
 *
 * \inputs	mylogger	pointer to logging "device"
 */
void DestroyLogger(SHLogger* mylogger) {
	fclose(mylogger->file); // in case this was not done before
	free(mylogger);
}

// manage time in logging messages
